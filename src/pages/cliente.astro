---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import Body from '../components/Body.astro';
---

<Layout>
  <Navbar />
  <Body title="Cliente">
    <div class="content-center">
      <h2 class="tituloProducto">Agregar producto:</h2>
      <div class="form-container">
        <form id="agregarForm">
          <label for="idAgregar">ID:</label>
          <input type="text" id="idAgregar" name="id" required>

          <label for="tituloAgregar">Titulo:</label>
          <input type="text" id="tituloAgregar" name="titulo" required>

          <label for="descripcionAgregar">Descripcion:</label>
          <textarea id="descripcionAgregar" name="descripcion" rows="4" required></textarea>

          <label for="precioAgregar">Precio:</label>
          <input type="number" id="precioAgregar" name="precio" required>

          <label for="linkImagenAgregar">Link Imagen:</label>
          <input type="url" id="linkImagenAgregar" name="linkImagen" required>

          <label for="seccionAgregar">Seccion:</label>
          <select id="seccionAgregar" name="seccion" required>
            <option value="Mac">Mac</option>
            <option value="Ipad">Ipad</option>
            <option value="Iphone">Iphone</option>
            <option value="Watch">Watch</option>
            <option value="AirPods">AirPods</option>
            <option value="Accesorios">Accesorios</option>
          </select>

          <button id="agregar" type="button">Agregar</button>
        </form>
      </div>
      
      <h2 class="tituloProducto">Modificar Precio Producto:</h2>
      <div class="form-container">
        <form id="modificarForm">
          <label for="idModificar">ID:</label>
          <input type="text" id="idModificar" name="id" required>
          
          <label for="precioModificar">Precio:</label>
          <input type="number" id="precioModificar" name="precio" required>
          
          <button id="modificar" type="button">Modificar</button>
        </form>
      </div>

      <h2 class="tituloProducto">Eliminar producto:</h2>
      <div class="form-container">
        <form id="eliminarForm">
          <label for="idEliminar">ID:</label>
          <input type="text" id="idEliminar" name="id">
          <button id="eliminar" type="button">Eliminar</button>
        </form>
      </div>
    </div>
  </Body>
  <Footer />
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Agregar producto
    const agregarButton = document.getElementById('agregar') as HTMLButtonElement;
    if (agregarButton) {
      agregarButton.addEventListener('click', async function() {
        const idElement = document.getElementById('idAgregar') as HTMLInputElement;
        const tituloElement = document.getElementById('tituloAgregar') as HTMLInputElement;
        const descripcionElement = document.getElementById('descripcionAgregar') as HTMLTextAreaElement;
        const precioElement = document.getElementById('precioAgregar') as HTMLInputElement;
        const linkImagenElement = document.getElementById('linkImagenAgregar') as HTMLInputElement;
        const seccionElement = document.getElementById('seccionAgregar') as HTMLSelectElement;

        if (idElement && tituloElement && descripcionElement && precioElement && linkImagenElement && seccionElement) {
          const id = idElement.value;
          const titulo = tituloElement.value;
          const descripcion = descripcionElement.value;
          const precio = precioElement.value;
          const linkImagen = linkImagenElement.value;
          const seccion = seccionElement.value;

          try {
            const response = await fetch('https://quasar-scientific-sidewalk.glitch.me/productos', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                id,
                titulo,
                descripcion,
                precio,
                linkImagen,
                seccion
              })
            });

            if (response.ok) {
              alert('Producto agregado correctamente.');
            } else {
              alert('Hubo un error al agregar el producto.');
            }
          } catch (error) {
            console.error('Error en la solicitud: ', error);
            alert('Hubo un error al agregar el producto.');
          }
        } else {
          console.error('No se pudo encontrar uno o más elementos del formulario.');
        }
      });
    } else {
      console.error('No se pudo encontrar el botón de agregar.');
    }

    // Modificar precio producto por ID
    const modificarButton = document.getElementById('modificar') as HTMLButtonElement;
    if (modificarButton) {
      modificarButton.addEventListener('click', async function() {
        const idElement = document.getElementById('idModificar') as HTMLInputElement;
        const precioElement = document.getElementById('precioModificar') as HTMLInputElement;
  
        if (idElement && precioElement) {
          const id = idElement.value.trim();
          const nuevoPrecio = precioElement.value.trim();
  
          if (!id || !nuevoPrecio) {
            alert('Por favor, complete todos los campos.');
            return;
          }
  
          try {
            // Buscar el producto por ID
            const response = await fetch(`https://quasar-scientific-sidewalk.glitch.me/productos/${id}`);
  
            if (!response.ok) {
              throw new Error('Producto no encontrado.');
            }
  
            const producto = await response.json();
  
            if (producto) {
              // Actualizar el precio del producto
              producto.precio = nuevoPrecio;
  
              const updateResponse = await fetch(`https://quasar-scientific-sidewalk.glitch.me/productos/${id}`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(producto)
              });
  
              if (updateResponse.ok) {
                alert('Precio modificado correctamente.');
              } else {
                const errorText = await updateResponse.text();
                alert(`Hubo un error al modificar el precio: ${errorText}`);
              }
            } else {
              alert('No se encontró un producto con ese ID.');
            }
          } catch (error) {
            console.error('Error en la solicitud: ', error);
            alert(`Hubo un error al modificar el precio: ${error.message}`);
          }
        } else {
          console.error('No se pudo encontrar uno o más elementos del formulario.');
        }
      });
    } else {
      console.error('No se pudo encontrar el botón de modificar.');
    }

    // Eliminar producto
    const eliminarButton = document.getElementById('eliminar') as HTMLButtonElement;
    if (eliminarButton) {
      eliminarButton.addEventListener('click', async function() {
        const tituloElement = document.getElementById('tituloEliminar') as HTMLInputElement;
        const idElement = document.getElementById('idEliminar') as HTMLInputElement;

        let id = idElement ? idElement.value : null;
        const titulo = tituloElement ? tituloElement.value : null;

        if (id || titulo) {
          try {
            let response;
            if (id) {
              response = await fetch(`https://quasar-scientific-sidewalk.glitch.me/productos/${id}`, {
                method: 'DELETE',
              });
            } else if (titulo) {
              response = await fetch(`https://quasar-scientific-sidewalk.glitch.me/productos?titulo=${encodeURIComponent(titulo)}`, {
                method: 'DELETE',
              });
            }

            if (response && response.ok) {
              alert('Producto eliminado correctamente.');
            } else {
              alert('Hubo un error al eliminar el producto.');
            }
          } catch (error) {
            console.error('Error en la solicitud: ', error);
            alert('Hubo un error al eliminar el producto.');
          }
        } else {
          console.error('Debe proporcionar un ID o un título para eliminar el producto.');
        }
      });
    } else {
      console.error('No se pudo encontrar el botón de eliminar.');
    }
  });
</script>

<style>
  body {
    background-color: #333;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    color: aliceblue;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .content-center {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    box-sizing: border-box;
  }

  .tituloProducto {
    margin-bottom: 2rem;
    text-align: center;
    color: aliceblue;
  }

  .form-container {
    background-color: #fff;
    padding: 5rem;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    width: 100%;
    max-width: 500px;
    color: #333;
  }

  form {
    display: flex;
    flex-direction: column;
  }

  label {
    margin-bottom: 0.5rem;
  }

  input, textarea, select {
    margin-bottom: 1rem;
    padding: 0.5rem;
    border-radius: 4px;
    border: 1px solid #ddd;
  }

  button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
  }

  button:hover {
    background-color: #0056b3;
  }

  button:disabled {
    background-color: #d6d6d6;
    cursor: not-allowed;
  }

  input:focus, textarea:focus, select:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
  }
</style>
