---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import Body from '../components/Body.astro';
---

<Layout>
  <Navbar />
  <Body title="Cliente">
    <div class="content-center">
      <h2 class="tituloProducto">Agregar producto:</h2>
      <div class="form-container">
        <form id="agregarForm">
          <label for="idAgregar">ID:</label>
          <input type="text" id="idAgregar" name="id" required>

          <label for="tituloAgregar">Titulo:</label>
          <input type="text" id="tituloAgregar" name="titulo" required>

          <label for="descripcionAgregar">Descripcion:</label>
          <textarea id="descripcionAgregar" name="descripcion" rows="4" required></textarea>

          <label for="precioAgregar">Precio:</label>
          <input type="number" id="precioAgregar" name="precio" required>

          <label for="linkImagenAgregar">Link Imagen:</label>
          <input type="url" id="linkImagenAgregar" name="linkImagen" required>

          <label for="seccionAgregar">Seccion:</label>
          <select id="seccionAgregar" name="seccion" required>
            <option value="Mac">Mac</option>
            <option value="Ipad">Ipad</option>
            <option value="Iphone">Iphone</option>
            <option value="Watch">Watch</option>
            <option value="AirPods">AirPods</option>
            <option value="Accesorios">Accesorios</option>
          </select>

          <button id="agregar" type="button">Agregar</button>
        </form>
      </div>
      
      <h2 class="tituloProducto">Modificar Precio Producto:</h2>
      <div class="form-container">
        <form id="modificarForm">
          
          <label for="tituloModificar">Titulo:</label>
          <input type="text" id="tituloModificar" name="titulo" required>
          
          <label for="precioModificar">Precio:</label>
          <input type="number" id="precioModificar" name="precio" required>
          
          <button id="modificar" type="button">Modificar</button>
        </form>
      </div>

      <h2 class="tituloProducto">Eliminar producto:</h2>
      <div class="form-container">
        <form id="eliminarForm">
          
          <label for="tituloEliminar">Titulo:</label>
          <input type="text" id="tituloEliminar" name="titulo" required>
          
          <button id="eliminar" type="button">Eliminar</button>
        </form>
      </div>
    </div>
  </Body>
  <Footer />
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Agregar producto
    const agregarButton = document.getElementById('agregar') as HTMLButtonElement;
    if (agregarButton) {
      agregarButton.addEventListener('click', async function() {
        const idElement = document.getElementById('idAgregar') as HTMLInputElement;
        const tituloElement = document.getElementById('tituloAgregar') as HTMLInputElement;
        const descripcionElement = document.getElementById('descripcionAgregar') as HTMLTextAreaElement;
        const precioElement = document.getElementById('precioAgregar') as HTMLInputElement;
        const linkImagenElement = document.getElementById('linkImagenAgregar') as HTMLInputElement;
        const seccionElement = document.getElementById('seccionAgregar') as HTMLSelectElement;

        if (idElement && tituloElement && descripcionElement && precioElement && linkImagenElement && seccionElement) {
          const id = idElement.value;
          const titulo = tituloElement.value;
          const descripcion = descripcionElement.value;
          const precio = precioElement.value;
          const linkImagen = linkImagenElement.value;
          const seccion = seccionElement.value;

          try {
            const response = await fetch('https://quasar-scientific-sidewalk.glitch.me/productos', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                id,
                titulo,
                descripcion,
                precio,
                linkImagen,
                seccion
              })
            });

            if (response.ok) {
              alert('Producto agregado correctamente.');
            } else {
              alert('Hubo un error al agregar el producto.');
            }
          } catch (error) {
            console.error('Error en la solicitud: ', error);
            alert('Hubo un error al agregar el producto.');
          }
        } else {
          console.error('No se pudo encontrar uno o más elementos del formulario.');
        }
      });
    } else {
      console.error('No se pudo encontrar el botón de agregar.');
    }

    // Modificar precio producto
    const modificarButton = document.getElementById('modificar') as HTMLButtonElement;
    if (modificarButton) {
      modificarButton.addEventListener('click', async function() {
        const tituloElement = document.getElementById('tituloModificar') as HTMLInputElement;
        const precioElement = document.getElementById('precioModificar') as HTMLInputElement;

        if (tituloElement && precioElement) {
          const titulo = tituloElement.value;
          const nuevoPrecio = precioElement.value;

          try {
            // Primero, buscar el producto por título
            let response = await fetch(`https://quasar-scientific-sidewalk.glitch.me/productos?titulo=${encodeURIComponent(titulo)}`);
            let productos = await response.json();

            if (productos.length > 0) {
              // Encontrar el producto con el título dado
              const producto = productos.find((p: { titulo: string }) => p.titulo === titulo);

              if (producto) {
                // Actualizar el precio del producto
                producto.precio = nuevoPrecio;

                const updateResponse = await fetch(`https://quasar-scientific-sidewalk.glitch.me/productos/${producto.id}`, {
                  method: 'PUT',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(producto)
                });

                if (updateResponse.ok) {
                  alert('Precio modificado correctamente.');
                } else {
                  alert('Hubo un error al modificar el precio.');
                }
              } else {
                alert('No se encontró un producto con ese título.');
              }
            } else {
              alert('No se encontró el producto con ese título.');
            }
          } catch (error) {
            console.error('Error en la solicitud: ', error);
            alert('Hubo un error al modificar el precio.');
          }
        } else {
          console.error('No se pudo encontrar uno o más elementos del formulario.');
        }
      });
    } else {
      console.error('No se pudo encontrar el botón de modificar.');
    }

    // Eliminar producto
    const eliminarButton = document.getElementById('eliminar') as HTMLButtonElement;
    if (eliminarButton) {
      eliminarButton.addEventListener('click', async function() {
        const tituloElement = document.getElementById('tituloEliminar') as HTMLInputElement;

        if (tituloElement) {
          const titulo = tituloElement.value;

          try {
            let response = await fetch(https://quasar-scientific-sidewalk.glitch.me/productos?titulo=${encodeURIComponent(titulo)});
            let productos = await response.json();
            console.log(productos);  // Verifica qué productos está devolviendo

            if (productos.length > 0) {
              // Buscar coincidencia exacta por título
              const producto = productos.find((p: { titulo: string }) => p.titulo === titulo);

              if (producto) {
                const deleteResponse = await fetch(https://quasar-scientific-sidewalk.glitch.me/productos/${producto.id}, {
                  method: 'DELETE',
                });
              console.log(deleteResponse); // Revisa la respuesta de la solicitud DELETE

                if (deleteResponse.ok) {
                  alert('Producto eliminado correctamente.');
                } else {
                  alert('Hubo un error al eliminar el producto.');
                }
              } else {
                alert('No se encontró un producto con ese título.');
              }
            } else {
              alert('No se encontró el producto con ese título.');
            }
          } catch (error) {
            console.error('Error en la solicitud: ', error);
            alert('Hubo un error al eliminar el producto.');
          }
        } else {
          console.error('No se pudo encontrar uno o más elementos del formulario.');
        }
      });
    } else {
      console.error('No se pudo encontrar el botón de eliminar.');
    }
  });
</script>


<style>
  body {
    background-color: #333;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    color: aliceblue;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .content-center {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    box-sizing: border-box;
  }

  .tituloProducto {
    margin-bottom: 2rem;
    text-align: center;
    color: aliceblue;
  }

  .form-container {
    background-color: #fff;
    padding: 5rem;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    max-width: 600px; /* Más ancho */
    width: 100%;
    transition: max-width 0.3s ease;
  }

  form {
    display: flex;
    flex-direction: column;
  }

  label {
    margin-bottom: 8px;
    font-weight: bold;
    color: #333;
  }

  input[type="text"],
  input[type="url"],
  input[type="number"],
  textarea,
  select {
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 16px;
    width: 100%;
  }

  textarea {
    resize: vertical;
  }

  button {
    background-color: #007bff;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
  }

  button:hover {
    background-color: #0056b3;
  }

  /* Responsividad */
  @media (max-width: 768px) {
    .form-container {
      max-width: 90%; /* Para pantallas más pequeñas */
    }
  }

  @media (max-width: 480px) {
    .tituloProducto {
      font-size: 1.5rem; /* Reducir tamaño del texto en pantallas pequeñas */
    }

    label {
      font-size: 14px; /* Ajustar tamaño de fuente de los labels */
    }

    button {
      font-size: 14px; /* Ajustar tamaño de fuente del botón */
    }
  }
</style>
