---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';
import Body from '../../components/Body.astro';

// Define the interface for product data
interface Producto {
  id: string;
  titulo: string;
  descripcion: string;
  linkImagen: string;
  precio: string;
}

export async function getStaticPaths() {
  const res = await fetch('https://quasar-scientific-sidewalk.glitch.me/productos');
  const productos: Producto[] = await res.json();

  return productos.map(({ id, titulo, descripcion, linkImagen, precio }) => {
    return {
      params: { slug: id },
      props: { id, titulo, descripcion, linkImagen, precio },
    };
  });
}

export async function getStaticProps({ params }: { params: { slug: string } }) {
  const res = await fetch(`https://quasar-scientific-sidewalk.glitch.me/productos/${params.slug}`);
  const producto: Producto = await res.json();

  return {
    props: producto
  };
}

const { id, titulo, descripcion, linkImagen, precio } = Astro.props;

---

<Layout>
  <Navbar />
  <Body>
    <img src={linkImagen} alt="" class="product-image" />
    <div class="product-info-container">
      <h2 class="product-title">{titulo}</h2>
      <p class="product-price">${precio}</p>
      <div class="medios-pago">
        <!-- SVG icons here -->
      </div>
      <div class="retiro">
        <!-- SVG icons here -->
      </div>
      <div class="button-container">
        <button class="add-to-cart-button" id={id}>Agregar al carrito</button>
      </div>
    </div>
    <div class="description-container">
      <h2 class="product-description">Descripcion</h2>
      <div class="linea"></div>
      <p class="product-description">{descripcion}</p>
    </div>
  </Body>
  <Footer />
</Layout>

<script>
  import { getProductosEnCarrito } from './productContainer'; 

document.addEventListener('DOMContentLoaded', () => {
  const button = document.querySelector('button.add-to-cart-button');

  if (button) {
    button.addEventListener('click', () => {
      const productId = button.id;
      let productosEnCarrito: { id: string, cantidad: number }[] = getProductosEnCarrito() || []; // Asegurarse de que productosEnCarrito sea un array

      // Añadir tipo explícito para el parámetro producto
      let productoEnCarrito = productosEnCarrito.find((producto: { id: string }) => producto.id === productId);

      if (productoEnCarrito) {
        productoEnCarrito.cantidad++;
        console.log(`Ya está en el carrito.`);
      } else {
        // Si el producto no está en el carrito, agrégalo con cantidad 1
        productoEnCarrito = {
          id: productId,
          cantidad: 1
        };
        productosEnCarrito.push(productoEnCarrito);
        console.log(`Se agregó el producto ${productId} al carrito.`);
      }

      // Guardar el carrito actualizado en localStorage
      localStorage.setItem("productos-en-carrito", JSON.stringify(productosEnCarrito));
      console.log(productosEnCarrito);
      alert("El producto fue agregado al carrito");
    });
  } else {
    console.error('El botón de agregar al carrito no se encontró en el DOM.');
  }
});
</script>

<style>
  body {
    background-color: #333;
  }

  .product-image {
    width: 40%;
    height: 30rem;
    float: left;
    margin-right: 2rem;
  }

  .product-info-container {
    display: inline-block;
    width: 46%;
    border: 1.2px solid black;
    border-radius: 4px;
    margin-left: 1rem;
    padding: 1rem;
  }

  .product-title {
    height: fit-content;
    color: white;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-weight: bold;
    margin-top: 0;
    overflow: hidden;
    font-size: 1.8rem;
  }

  .product-description {
    color: white;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .product-price {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    color: white;
    font-size: 2rem;
    margin-top: 0;
  }

  .button-container {
    margin-top: 30px;
    display: flex;
    justify-content: center;
  }

  .add-to-cart-button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    font-size: 16px;
  }

  .add-to-cart-button:hover {
    background-color: #0056b3;
  }

  .retiro1 {
    display: flex;
    align-items: center;
  }

  .description-container {
    width: 100%;
    display: inline-block;
    text-align: center;
  }

  .linea {
    width: 80%;
    margin: 0 auto;
    border-bottom: 2px solid black;
  }

  @media (max-width: 768px) {
    .product-image {
      width: 100%;
      height: auto;
      margin-bottom: 1rem;
      float: none;
      margin-top: 4rem;
    }

    .product-info-container {
      width: 100%;
      margin-left: 0;
      padding: 1rem;
      text-align: center;
    }

    .description-container {
      width: 100%;
      text-align: left;
      padding: 0 1rem;
    }

    .button-container {
      margin-top: 20px;
    }
  }
</style>
